<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>测试MarkText目录</title>
      <link href="/2022/02/11/ce-shi-marktext-mu-lu/"/>
      <url>/2022/02/11/ce-shi-marktext-mu-lu/</url>
      
        <content type="html"><![CDATA[<h1 id="一-一级目录"><a href="#一-一级目录" class="headerlink" title="一.一级目录"></a>一.一级目录</h1><h2 id="1-二级目录"><a href="#1-二级目录" class="headerlink" title="1.二级目录"></a>1.二级目录</h2><p>二级目录下述内容测试</p><h2 id="2-二级目录多项测试"><a href="#2-二级目录多项测试" class="headerlink" title="2.二级目录多项测试"></a>2.二级目录多项测试</h2><h1 id="二-二级目录"><a href="#二-二级目录" class="headerlink" title="二.二级目录"></a>二.二级目录</h1><p>代码块测试</p><p><code>print(what is code)</code></p>]]></content>
      
      
      <categories>
          
          <category> 测试 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 目录 </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二章变量笔记</title>
      <link href="/2022/01/25/di-er-zhang-bian-liang-bi-ji/"/>
      <url>/2022/01/25/di-er-zhang-bian-liang-bi-ji/</url>
      
        <content type="html"><![CDATA[<p>1.message and print</p><pre><code>message=print(message)</code></pre><pre><code>print('message')</code></pre><p>2.制表符和换行符<br>制表符\t 前加空格<br>换行符\n 换行<br>通过使用制表符和换行符来实现单行代码输出多行和添加空格</p><pre><code>print('eg:\n\tone\n\ttwo')</code></pre><p>3.删除空格<br>左删.lstrip() l是left的缩写<br>右删.rstrip() r是right的缩写<br>全删.strip()</p><pre><code>message=' test 'print(message.strip())</code></pre><p>4.使用函数 str()避免类型错误【指示确认字符串】<br>str(变量)</p><pre><code>age = 23 message = "Happy " + str(age) + "rd Birthday!"  #str()如果换成age会出现错误，无法确认非字符串还是字符串print(message)</code></pre><p>5.修改字符串的大小写<br>首字母大写</p><pre><code>name=hope_leeprint(name.title())</code></pre><p>全部大写</p><pre><code>name=hope_leeprint(name.upper())</code></pre><p>全部小写</p><pre><code>name=hope_leeprint(name.lower())</code></pre><p>6.数学运算<br>加减乘除全部适用包括运算法则<br>2+3 3-2 2*3 4/2<br>次方运算是双乘号<br>3**2<br>小数(浮点数)运算会因为计算机本身的原因，结果包含的小数位数可能是不确定的。</p><blockquote><blockquote><blockquote><p>0.2+0.1<br>0.30000000000000004<br>所有语言都存在这种问题，解决办法是通过特定的指令忽略多余的小数位数。</p></blockquote></blockquote></blockquote><p>实验内容，测试三个引号能否实现代码块<br>‘’’print()’’’</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 记录/（记录，理解） </tag>
            
            <tag> 原创 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Zen of Python转载记录</title>
      <link href="/2022/01/25/zen-of-python-zhuan-zai-ji-lu/"/>
      <url>/2022/01/25/zen-of-python-zhuan-zai-ji-lu/</url>
      
        <content type="html"><![CDATA[<p>Zen of Python（Python之禅）<br>Beautiful is better than ugly. （优美比丑陋好）</p><p>Explicit is better than implicit.（清晰比晦涩好）</p><p>Simple is better than complex.（简单比复杂好）</p><p>Complex is better than complicated.（复杂比错综复杂好）</p><p>Flat is better than nested.（扁平比嵌套好）</p><p>Sparse is better than dense.（稀疏比密集好）</p><p>Readability counts.（可读性很重要）</p><p>Special cases aren’t special enough to break the rules.（特殊情况也不应该违反这些规则）</p><p>Although practicality beats purity.（但现实往往并不那么完美）</p><p>Errors should never pass silently.（异常不应该被静默处理）</p><p>Unless explicitly silenced.（除非你希望如此）</p><p>In the face of ambiguity, refuse the temptation to guess.（遇到模棱两可的地方，不要胡乱猜测）</p><p>There should be one– and preferably only one –obvious way to do it.（肯定有一种通常也是唯一一种最佳的解决方案）</p><p>Although that way may not be obvious at first unless you’re Dutch.（虽然这种方案并不是显而易见的，因为你不是那个荷兰人[这里指的是Python之父Guido]）</p><p>Now is better than never.（现在开始做比不做好）</p><p>Although never is often better than <em>right</em> now.（不做比盲目去做好[极限编程中的YAGNI原则]）</p><p>If the implementation is hard to explain, it’s a bad idea.（如果一个实现方案难于理解，它就不是一个好的方案）</p><p>If the implementation is easy to explain, it may be a good idea.（如果一个实现方案易于理解，它很有可能是一个好的方案）</p><p>Namespaces are one honking great idea – let’s do more of those!（命名空间非常有用，我们应当多加利用）</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转载 </tag>
            
            <tag> Python </tag>
            
            <tag> 记录/（记录，理解） </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>My First Vlog</title>
      <link href="/2022/01/23/my-first-blog/"/>
      <url>/2022/01/23/my-first-blog/</url>
      
        <content type="html"><![CDATA[<p>测试内容</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 心得 </tag>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/01/23/hello-world/"/>
      <url>/2022/01/23/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></tbody></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
